apply plugin: 'com.android.application'
apply plugin: 'checkstyle'
apply plugin: 'pmd'

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "com.example.zhonglushu.myapplication"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        //checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
        // true--显示错误的所有发生位置，不截取
        //showAll true
        // 重新指定 Lint 规则配置文件
        //lintConfig file("../default-lint.xml")
        // true--生成XML格式报告
        //xmlReport true
        // 指定xml报告文档(默认lint-results.xml)
        //xmlOutput file("../lint-report.xml")
        // true--生成HTML报告(带问题解释，源码位置，等)
        //htmlReport true
        // html报告可选路径(构建器默认是lint-results.html )
        //htmlOutput file("../lint-report.html")
    }
}

checkstyle {
    configFile rootProject.file('config/checkstyle/checkstyle.xml')
    ignoreFailures false
    showViolations true
    toolVersion '8.12'
}

task checkstyle(type: Checkstyle) {
    configFile rootProject.file('config/checkstyle/checkstyle.xml')
    source 'src/main/java'
    ignoreFailures false
    showViolations true
    include '**/*.java'
    classpath = files()
}

task pmd(type: Pmd) {
    ignoreFailures = true
    ruleSetFiles = files("${project.rootDir}/config/pmd/pmd-rulesets.xml")
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = true
        html.enabled = true
//        xml {
//            destination "$reportsDir/pmd/pmd.xml"
//        }
//        html {
//            destination "$reportsDir/pmd/pmd.html"
//        }
    }
}

// adds checkstyle task to existing check task
afterEvaluate {
    if (project.tasks.getByName("check")) {
        check.dependsOn('checkstyle')
        check.dependsOn('pmd')
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:28.0.0'
    compile 'com.android.support:design:28.0.0'
    // https://mvnrepository.com/artifact/com.google.guava/guava
//    compile group: 'com.google.guava', name: 'guava', version: '25.1-jre'
    // https://mvnrepository.com/artifact/net.sf.saxon/Saxon-HE
//    compile group: 'net.sf.saxon', name: 'Saxon-HE', version: '9.8.0-12'
    compile project(':labeltextview')
}
